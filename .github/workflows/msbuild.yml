name: MSBuild

on: [push]

env:
  SOLUTION_FILE_PATH: .
  Platform: X64
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild ./BDSpyrunner.sln -property:Configuration=Release

      - name: MkDirs
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          mkdir D:/out

      - name: Copy Out Files
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          cp -a D:/a/BDSpyrunner/test/bdxcore_mod/*.dll D:/out
          cp -a D:/a/BDSpyrunner/test/bdxcore_mod/*.pdb D:/out
        shell: bash

      - name: package
        if: startsWith(github.event.ref, 'refs/tags/v')
        shell: pwsh
        run: Compress-Archive -Path D:/out/* out.zip

      - name: Create Release
        if: startsWith(github.event.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PYR_PUBLISH }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ""
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: startsWith(github.event.ref, 'refs/tags/v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PYR_PUBLISH }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out.zip
          asset_name: BDSpyrunner.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: BDSpyrunner
          path: D:/out
